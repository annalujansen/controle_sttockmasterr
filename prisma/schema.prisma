generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}


model Account {
    id                       String  @id @default(cuid())
    userId                   String
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    expires      DateTime
}

model User {
    id            String  @id @default(cuid())
    name          String?
    email         String?   @unique
    password      String
    isadmin       Boolean @default(false)
    emailVerified DateTime?
    image         String
    accounts      Account[]
    sessions      Session[]
    transaction   Transaction[]
}

model Product {
    id         String  @id @default(cuid())
    name       String 
    description  String?
    price      Float
    quantity   Int
    recentSoldAmount Int @default(0)
    totalSoldAmount Int @default(0)
    transaction  Transaction[]
}

model Transaction {
    id         String  @id @default(cuid())
    productId  String
    product    Product @relation(fields: [productId], references: [id])
    quantity   Int
    type       String
    data       DateTime @default(now())
    userId     String
    user       User    @relation(fields: [userId], references: [id])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}